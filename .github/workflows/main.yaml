name: Push Docker Image to Amazon ECR
on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}


        - name: Login to Amazon ECR
          id: login-pf-aws-ecr
          uses: aws-actions/amazon-ecr-login@v1


        - name: Build and push the tagged docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
            IMAGE_TAG: latest
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


        - name: Execute Docker Commands on AWS Instance to deploy the application
          env:
            INSTANCE_ID_1: "i-0d26fc2b02c616897"
            INSTANCE_ID_2: "i-0ca68176cd1d05357"
            CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
            ECR_IMAGE_TO_DEPLOY: ${{ steps.login-pf-aws-ecr.outputs.registry }}/${{secrets.AWS_ECR_REPO}}:latest
          run: |
            command_id=$(aws ssm send-command \
              --targets Key=InstanceIds,Values=i-0d26fc2b02c616897,i-0ca68176cd1d05357 \
              --document-name "AWS-RunShellScript" \
              --comment "Executing Docker operations" \
              --parameters commands='[
                "set -e",
                "trap '\''echo DOCKER_LOGIN_FAILURE 1>&2'\'' ERR; aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_IMAGE_TO_DEPLOY }}",
                "trap '\''echo DOCKER_PULL_FAILURE 1>&2'\'' ERR; docker pull ${{ env.ECR_IMAGE_TO_DEPLOY }}",
                "trap '\''echo DOCKER_RUN_FAILURE 1>&2'\'' ERR; docker run -d -p 3000:3000 --name ${{ env.CONTAINER_NAME }} ${{ env.ECR_IMAGE_TO_DEPLOY }}"
              ]' --query 'Command.CommandId' --output text)

            echo "command_id=$command_id" >> $GITHUB_ENV